import { Elysia, t } from "elysia";
import { callGeminiAPI } from "../utils/geminiClient";
import { normalize } from "../utils/normalize";

const GREETINGS = ["oi", "ol√°", "ola", "bom dia", "boa tarde", "boa noite"];
const ALLOWED_TOPICS = [
  // Emo√ß√µes e transtornos
  "ansiedade",
  "ansioso",
  "ansiosa",
  "crise de ansiedade",
  "depress√£o",
  "depressivo",
  "depressiva",
  "triste",
  "tristeza",
  "des√¢nimo",
  "ang√∫stia",
  "medo",
  "p√¢nico",
  "culpa",
  "raiva",
  "inseguran√ßa",
  "autoestima",
  "autoconfian√ßa",
  "autoimagem",
  "cansado",
  "cansada",
  "estresse",
  "estressado",
  "estressada",
  "burnout",
  "esgotamento",
  "fobia",
  "fobias",
  "transtorno",
  "transtornos",
  "chateado",
  "chateada",
  "preocupado",
  "preocupada",
  "preocupa√ß√£o",
  "preocupa√ß√µes",
  "desesperan√ßa",
  "desespero",
  "mindfulness",
  "medita√ß√£o",
  "autoconsci√™ncia",
  "compaix√£o",
  "trauma",
  "traum√°tico",
  "traum√°tica",

  // Quest√µes existenciais
  "sentido da vida",
  "prop√≥sito",
  "vazio existencial",
  "exist√™ncia",
  "autoconhecimento",
  "sofrimento",
  "solid√£o",
  "dor emocional",
  "imperman√™ncia",
  "desapego",
  "ilumina√ß√£o",
  "nirvana",
  "reencarna√ß√£o",

  // Filosofia e espiritualidade
  "espiritualidade",
  "cristianismo",
  "f√©",
  "ora√ß√£o",
  "deus",
  "esperan√ßa",
  "reden√ß√£o",
  "pecado",
  "salva√ß√£o",
  "evangelho",
  "reflex√£o",
  "√©tica",
  "virtude",
  "alma",
  "vida ap√≥s a morte",
  "budismo",
  "zen",
  "karma",
  "sil√™ncio interior",

  // Neurodiverg√™ncias e transtornos do neurodesenvolvimento
  "tdah",
  "tea",
  "autismo",
  "autista",
  "bipolaridade",
  "transtorno bipolar",
  "transtorno de personalidade",
  "transtorno obsessivo-compulsivo",
  "toc",
  "espectro autista",
  "d√©ficit de aten√ß√£o",
  "hiperatividade",
  "neurodivergente",
  "neurodiverg√™ncia",

  // Sa√∫de e enfrentamento de doen√ßas
  "tratamento",
  "cura",
  "c√¢ncer",
  "luto",
  "enfermidade",
  "doen√ßa",
  "terminal",
  "morte",
  "perda",
  "perca",
  "diagn√≥stico",
  "recupera√ß√£o",

  // Problemas amorosos e relacionamentos
  "relacionamento",
  "problema amoroso",
  "problemas amorosos",
  "trai√ß√£o",
  "chifre",
  "amante",
  "ci√∫mes",
  "t√©rmino",
  "separa√ß√£o",
  "div√≥rcio",
  "desilus√£o amorosa",
  "relacionamento t√≥xico",
  "amor n√£o correspondido",
  "namorado",
  "namorada",
  "casamento",
  "infidelidade",
];

const DIVERSITY_TOPICS = [
  // Identidade, diversidade e preconceito
  "lgbt",
  "lgbtqia+",
  "gay",
  "l√©sbica",
  "bissexual",
  "transexual",
  "transg√™nero",
  "n√£o-bin√°rio",
  "homossexual",
  "identidade de g√™nero",
  "orienta√ß√£o sexual",
  "preconceito",
  "discrimina√ß√£o",
  "homofobia",
  "transfobia",
  "autoaceita√ß√£o",
  "sair do arm√°rio",
  "rejei√ß√£o familiar",
  "aceita√ß√£o",
];

export const psychologistRoute = new Elysia().post(
  "/gemini/chat/psychologist",
  async ({ body }) => {
    const lastUserMessage = [...body.contents]
      .reverse()
      .find((msg) => msg.role === "user");

    const input = normalize(lastUserMessage?.parts[0]?.text || "");

    const isCurrentAllowed = ALLOWED_TOPICS.some((t) =>
      input.includes(normalize(t))
    );

    const lastAllowedTopic = [...body.contents]
      .map((msg) => msg.parts[0]?.text || "")
      .reverse()
      .find((msg) =>
        ALLOWED_TOPICS.some((t) => normalize(msg).includes(normalize(t)))
      );

    const enrichedInput =
      !isCurrentAllowed && lastAllowedTopic
        ? `${input} ${lastAllowedTopic}`
        : input;

    const isGreeting = GREETINGS.some((g) =>
      enrichedInput.includes(normalize(g))
    );

    const isAllowed = ALLOWED_TOPICS.some((t) =>
      enrichedInput.includes(normalize(t))
    );

    const isDiversityTopic = DIVERSITY_TOPICS.some((t) =>
      enrichedInput.includes(normalize(t))
    );

    // Resposta especial para o PAP da Unifor
    const mentionsPapAndUnifor =
      normalize(input).includes("pap") && normalize(input).includes("unifor");

    if (mentionsPapAndUnifor) {
      return {
        candidates: [
          {
            content: {
              role: "model",
              parts: [
                {
                  text:
                    "O Programa de Apoio Psicopedag√≥gico (PAP) da Unifor oferece suporte emocional e psicopedag√≥gico para alunos. Voc√™ pode entrar em contato pelos seguintes canais:\n\n" +
                    "üìû Telefone: (85) 3477.3399\n" +
                    "üí¨ WhatsApp: (85) 99250.7530\n" +
                    "üìß E-mail: pap@unifor.br\n\n" +
                    "Se estiver passando por dificuldades, n√£o hesite em procurar ajuda. üíô",
                },
              ],
            },
            finishReason: "STOP",
          },
        ],
      };
    }

    if (!isGreeting && !isAllowed) {
      return {
        candidates: [
          {
            content: {
              role: "model",
              parts: [
                {
                  text: "Desculpe, s√≥ posso responder perguntas relacionadas √† sa√∫de mental, psicologia, filosofia e espiritualidade crist√£.",
                },
              ],
            },
            finishReason: "STOP",
          },
        ],
      };
    }

    const greetingPrompt = {
      role: "user",
      parts: [
        {
          text: "Voc√™ √© uma psic√≥loga acolhedora. Responda sempre em portugu√™s, com empatia. Se a mensagem for apenas uma sauda√ß√£o, responda de forma simples e breve, com no m√°ximo uma ou duas frases, e convide a pessoa a compartilhar como est√° se sentindo ou o que a trouxe para a conversa.",
        },
      ],
    };

    const defaultPrompt = {
      role: "user",
      parts: [
        {
          text: "Voc√™ √© uma psic√≥loga acolhedora. Responda sempre em portugu√™s, com empatia e de forma clara. Use no m√°ximo 3 par√°grafos curtos. Seja concisa e acolhedora. Baseie-se na psicologia, filosofia e f√© crist√£ para apoiar pessoas com ansiedade, depress√£o e quest√µes existenciais.",
        },
      ],
    };

    // const systemPrompt =
    //   isGreeting && !isCurrentAllowed ? greetingPrompt : defaultPrompt;

    const diversityPrompt = {
      role: "user",
      parts: [
        {
          text: "Voc√™ √© uma psic√≥loga acolhedora. Responda sempre em portugu√™s, com empatia e respeito. N√£o mencione religi√£o. Aborde o tema com acolhimento e foco na sa√∫de mental, inclus√£o e autoaceita√ß√£o.",
        },
      ],
    };

    const systemPrompt = isDiversityTopic
      ? diversityPrompt
      : isGreeting && !isCurrentAllowed
      ? greetingPrompt
      : defaultPrompt;

    const payload = {
      contents: [systemPrompt, ...body.contents],
    };

    return await callGeminiAPI(payload);
  },
  {
    body: t.Object({
      contents: t.Array(
        t.Object({
          role: t.String(),
          parts: t.Array(t.Object({ text: t.String() })),
        })
      ),
    }),
  }
);
